// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0..2]=address[6..8],
              a=rama, b=ramb, c=ramc, d=ramd,
              e=rame, f=ramf, g=ramg, h=ramh);
    RAM64(in=in, load=rama, address[0..5]=address[0..5], out=outa);
    RAM64(in=in, load=ramb, address[0..5]=address[0..5], out=outb);
    RAM64(in=in, load=ramc, address[0..5]=address[0..5], out=outc);
    RAM64(in=in, load=ramd, address[0..5]=address[0..5], out=outd);
    RAM64(in=in, load=rame, address[0..5]=address[0..5], out=oute);
    RAM64(in=in, load=ramf, address[0..5]=address[0..5], out=outf);
    RAM64(in=in, load=ramg, address[0..5]=address[0..5], out=outg);
    RAM64(in=in, load=ramh, address[0..5]=address[0..5], out=outh);
    Mux8Way16(a=outa, b=outb, c=outc, d=outd,
              e=oute, f=outf, g=outg, h=outh,
              sel[0..2]=address[6..8],
              out=out);
}
