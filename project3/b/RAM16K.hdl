// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0..1]=address[12..13],
              a=rama, b=ramb, c=ramc, d=ramd);
    RAM4K(in=in, load=rama, address[0..11]=address[0..11], out=outa);
    RAM4K(in=in, load=ramb, address[0..11]=address[0..11], out=outb);
    RAM4K(in=in, load=ramc, address[0..11]=address[0..11], out=outc);
    RAM4K(in=in, load=ramd, address[0..11]=address[0..11], out=outd);
    Mux8Way16(a=outa, b=outb, c=outc, d=outd,
              sel[0..1]=address[12..13],
              out=out);
}
